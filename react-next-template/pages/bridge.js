import React, { useCallback, useEffect, useState } from 'react';
import classNames from 'classnames';
import Router from 'next/router';
import { isMobile, isAndroid, isIOS } from "react-device-detect";
import { googlePlayScheme, appStoreScheme } from '../config/config';
// import styles
import { makeStyles } from '@material-ui/core/styles';

const styles = makeStyles({
    fontStyle: {
        fontFamily: "Noto Sans KR",
        fontWeight: "bolder",
        color: "#FDFDFD",
        fontSize: '32px',
        lineHeight: "46px",
        "@media (max-width: 599px)": {
            fontSize: '20px',
            lineHeight: "29px",
        },
    },
    logoSize: {
        width: "128px",
        height: "128px",
        "@media (max-width: 599px)": {
            width: "82px",
            height: "82px",
        },
    }
});


const SampleLogo = ({ ...styles }) => (
    <div {...styles}>
        <svg width="100%" height="100%" viewBox="0 0 126 126" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M108.478 34.3117C108.482 35.8614 108.132 37.3917 107.456 38.7859C106.779 40.18 105.793 41.4014 104.573 42.3568L101.288 44.9241C98.5739 38.5982 94.4786 32.9599 89.302 28.4228L92.0126 26.2997C93.5152 25.1216 95.3189 24.3897 97.2176 24.1876C99.1163 23.9855 101.034 24.3214 102.751 25.1568C104.468 25.9923 105.915 27.2938 106.928 28.9126C107.94 30.5314 108.477 32.4023 108.478 34.3117V34.3117Z" fill="#FDFDFD" />
            <path fillRule="evenodd" clipRule="evenodd" d="M89.6336 90.8432C96.5691 83.2273 100.414 73.2978 100.415 62.9971C100.413 57.8126 99.4389 52.6745 97.5439 47.8488C93.7731 38.2631 86.5617 30.4291 77.3203 25.8794C68.0789 21.3296 57.4725 20.3915 47.576 23.2485C37.6794 26.1055 29.2049 32.5521 23.8102 41.3271C18.4155 50.1021 16.4888 60.5742 18.4071 70.6947C20.3253 80.8151 25.9505 89.8558 34.1821 96.0481C42.4137 102.24 52.6594 105.139 62.915 104.176C73.1706 103.213 82.6981 98.4592 89.6336 90.8432ZM77.0391 79.9376C78.0979 80.4229 79.257 80.6492 80.4206 80.5978C82.0856 80.5245 83.6927 79.9649 85.0432 78.9881C87.3007 77.1464 89.1062 74.8118 90.321 72.1637C90.5665 71.7157 90.7159 71.2215 90.7597 70.7126C90.8035 70.2036 90.7407 69.6911 90.5753 69.2078C90.4099 68.7245 90.1456 68.281 89.7991 67.9056C89.4527 67.5302 89.0318 67.2312 88.5633 67.0276C87.9492 66.7756 87.2769 66.7 86.6222 66.8094C85.9674 66.9187 85.3562 67.2087 84.8573 67.6466C84.344 68.3191 83.8813 69.0287 83.4729 69.7697L82.0554 71.9495C81.7026 72.4928 81.0254 73.4867 80.2379 73.2284C79.6882 73.0472 79.4204 72.2771 79.3984 71.7715C79.3795 71.3163 79.3653 70.8611 79.3527 70.4044C79.2925 68.0226 79.3845 65.6283 79.4765 63.2335C79.6663 58.2945 79.8562 53.3528 78.7117 48.5119C78.0659 45.7777 76.0688 42.6954 73.0763 41.9772C71.974 41.6985 70.8103 41.7949 69.7688 42.2513C67.1367 43.4338 66.0195 46.1433 64.9773 48.6707C64.8272 49.0349 64.6786 49.3952 64.5272 49.7467C61.7253 56.4845 58.8383 63.1846 55.9372 69.8799C55.7986 70.2516 55.6025 70.5992 55.356 70.91C55.2413 71.0515 55.0976 71.1669 54.9346 71.2484C54.7716 71.3299 54.5931 71.3756 54.411 71.3825C54.2735 71.3726 54.1401 71.3311 54.0212 71.2612C53.9024 71.1912 53.8013 71.0947 53.7259 70.9793C53.549 70.6165 53.5007 70.2044 53.5889 69.8106C53.7227 68.5963 53.8566 67.3804 53.9763 66.1661C54.0279 65.6507 54.0939 65.1292 54.1602 64.6056C54.2965 63.5292 54.434 62.444 54.4488 61.3844C54.8533 58.5899 55.0266 55.7669 54.967 52.9439C54.8985 51.6076 54.5604 50.2989 53.973 49.0966C53.3857 47.8943 52.5612 46.8232 51.5492 45.9478C50.7674 45.2574 49.8294 44.7677 48.8161 44.5207C47.8027 44.2738 46.7445 44.277 45.7328 44.5303C41.7732 45.6202 39.7415 50.1215 38.3933 53.6149C35.759 60.2021 32.4546 66.5011 28.5322 72.4125C28.0249 73.1639 27.802 74.0715 27.9036 74.9725C28.0052 75.8734 28.4247 76.7086 29.0866 77.3281C29.467 77.6644 29.9157 77.9143 30.4019 78.0606C30.8881 78.2068 31.4003 78.246 31.9031 78.1753C32.4059 78.1047 32.8874 77.9259 33.3145 77.6513C33.7416 77.3767 34.1041 77.0128 34.377 76.5847C34.7498 76.0124 35.1173 75.4381 35.4795 74.8616C37.4 71.7967 39.1923 68.6609 40.8566 65.4542C41.9257 63.3982 42.8867 61.2849 43.8477 59.1716C44.1198 58.5731 44.3919 57.9747 44.6665 57.3776L46.2415 53.9598L46.2481 53.9454C46.4353 53.5348 47.2728 51.6983 47.763 52.7423C47.8224 52.8889 47.8524 53.0457 47.8512 53.2038C47.8427 55.1417 47.7107 57.0771 47.4558 58.9982C47.2889 61.0694 47.1125 63.1736 46.9345 65.2211C46.8694 65.9687 46.8059 66.71 46.7439 67.445C46.3943 71.6518 46.7392 77.0997 51.2531 78.9818C52.5703 79.4737 53.9989 79.5868 55.3771 79.3084C56.7552 79.0301 58.0279 78.3713 59.051 77.4068C61.0285 75.3991 62.579 73.0117 63.609 70.3886C65.9211 65.6677 67.8742 60.7757 69.8268 55.8851C70.3523 54.5691 70.8777 53.2531 71.41 51.9407C71.4779 51.6897 71.6361 51.4727 71.8541 51.3311C72.5378 51.0069 72.5263 52.2308 72.5211 52.7919C72.5202 52.8823 72.5195 52.9555 72.5219 53.0022C72.6727 56.0995 72.5352 59.1794 72.3977 62.2596C72.2866 64.7476 72.1756 67.2358 72.2164 69.7334L72.2164 69.7341C72.2495 71.7912 72.3048 75.2336 74.3316 77.8069C75.0522 78.7219 75.9803 79.4523 77.0391 79.9376Z" fill="#FDFDFD" />
        </svg>
    </div>

)

const Bridge = () => {
    const classes = styles();
    const [height, setHeight] = useState(0);
    let hideTimer = undefined;

    const clearTimer = () => {
        if (hideTimer) {
            clearTimeout(hideTimer);
            hideTimer = undefined;
        }
    };

    // 높이 변경
    const heightSize = useCallback(() => {
        if (typeof document !== "undefined") {
            setHeight(document.documentElement.clientHeight);
        }
    }, []);

    useEffect(() => {
        if (typeof window !== "undefined") {
            setHeight(document.documentElement.clientHeight);
            window.addEventListener('resize', heightSize);
        }
        hideTimer = setTimeout(() => {

            // 모바일 일때
            if (isMobile) {
                if (isAndroid) Router.push(googlePlayScheme);
                else if (isIOS) Router.push(appStoreScheme);
                else Router.push('/');
            }
            else Router.push('/');

        }, 500); // 0.5초 후 이동

        return () => {
            clearTimer();
        };
    }, []);

    return (
        <>
            <div className="waveContainer">
                {/* <!--Content before waves--> */}
                <div className={classNames("inner-header flex")} style={{ flexDirection: "column", justifyContent: "center", height: height - 100 }}>
                    <SampleLogo className={classes.logoSize}/>
                    <div className={classNames("flex", classes.fontStyle)}>
                        <p>앱 다운로드 페이지로</p>
                        <p>이동 중 입니다</p>
                    </div>
                </div>
                {/* <!--Waves Container--> */}
                <div>
                    <svg className="waves" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink"
                        viewBox="0 24 150 28" preserveAspectRatio="none" shapeRendering="auto">
                        <defs>
                            <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
                        </defs>
                        <g className="parallax">
                            <use xlinkHref="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
                            <use xlinkHref="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
                            <use xlinkHref="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
                            <use xlinkHref="#gentle-wave" x="48" y="7" fill="#fff" />
                        </g>
                    </svg>
                </div>
            </div>
        </>
    )
}

export default Bridge;